apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/managed-by: kubectl
  name: prometheus
  namespace: monitoring
spec:
  tls:
    - hosts:
      - "*.your-domain-name.com"
      secretName: your-domain-name-com-cert
  rules:
  - host: prometheus.your-domain-name.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-k8s
            port:
              number: 9090  
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/managed-by: kubectl
  name: alertmanager
  namespace: monitoring
spec:
  tls:
    - hosts:
      - "*.your-domain-name.com"
      secretName: your-domain-name-com-cert
  rules:
  - host: alertmanager.your-domain-name.com
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: alertmanager-main
            port:
              number: 9093
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/managed-by: kubectl
  name: grafana
  namespace: monitoring
spec:
  tls:
    - hosts:
      - "*.your-domain-name.com"
      secretName: your-domain-name-com-cert
  rules:
  - host: grafana.your-domain-name.com
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
status:
  loadBalancer: {}
